/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/

ext.deps = [:]
def deps = [:]

def build_versions = [:]
build_versions.min_sdk = 16
build_versions.target_sdk = 27
build_versions.build_tools = "27.0.0"
ext.build_versions = build_versions

def versions = [:]
versions.arch = hasProperty("ARCH_VERSION") ? getProperty("ARCH_VERSION") : "1.0.0-rc1"
versions.android_gradle_plugin = "3.0.0"
versions.support = "27.0.0"
versions.google_gms_classpath = "3.1.2"
versions.google_gms = "11.4.2"
versions.firebase = "11.4.2"
versions.dagger = "2.11"
versions.retrofit = "2.3.0"
versions.glide = "4.0.0"
versions.constraint_layout = "1.0.2"
versions.gson="2.4"

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = "com.android.support:appcompat-v7:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.palette = "com.android.support:palette-v7:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
deps.support = support

def gms = [:]
gms.play_services_ads = "com.google.android.gms:play-services-ads:$versions.google_gms"
gms.play_services_maps = "com.google.android.gms:play-services-maps:$versions.google_gms"
gms.play_services_gcm = "com.google.android.gms:play-services-gcm:$versions.google_gms"
deps.gms = gms

def firebase = [:]
firebase.core = "com.google.firebase:firebase-core:$versions.firebase"
firebase.messaging = "com.google.firebase:firebase-messaging:$versions.firebase"
firebase.crash = "com.google.firebase:firebase-crash:$versions.firebase"
deps.firebase = firebase

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
deps.retrofit = retrofit

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.arch"
room.compiler = "android.arch.persistence.room:compiler:$versions.arch"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.arch"
room.testing = "android.arch.persistence.room:testing:$versions.arch"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.arch"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.arch"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.arch"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.arch"
deps.lifecycle = lifecycle

deps.gson = "com.google.code.gson:gson:$versions.gson"

deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.glide = "com.github.bumptech.glide:glide:$versions.glide"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.google_gms_plugin = "com.google.gms:google-services:$versions.google_gms_classpath"
ext.deps = deps


static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://maven.google.com' }
    handler.maven { url 'https://jitpack.io' }
}
ext.addRepos = this.&addRepos



/*

Others

versions.junit = "4.12"
versions.espresso = "3.0.1"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.dexmaker = "2.2.0"


versions.timber = "4.5.1"
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.atsl_runner = "1.0.1"
versions.atsl_rules = "1.0.1"
versions.hamcrest = "1.3"
versions.kotlin = "1.1.4-2"
versions.paging = "1.0.0-alpha3"

def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch"
deps.arch_core = arch_core


def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jre7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"

deps.kotlin = kotlin
deps.paging = "android.arch.paging:runtime:$versions.paging"

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"

deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"

*/
